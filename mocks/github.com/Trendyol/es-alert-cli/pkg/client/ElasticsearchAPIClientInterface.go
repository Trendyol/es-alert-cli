// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mapset "github.com/deckarep/golang-set"
	mock "github.com/stretchr/testify/mock"

	model "github.com/Trendyol/es-alert-cli/pkg/model"
)

// ElasticsearchAPIClientInterface is an autogenerated mock type for the ElasticsearchAPIClientInterface type
type ElasticsearchAPIClientInterface struct {
	mock.Mock
}

type ElasticsearchAPIClientInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *ElasticsearchAPIClientInterface) EXPECT() *ElasticsearchAPIClientInterface_Expecter {
	return &ElasticsearchAPIClientInterface_Expecter{mock: &_m.Mock}
}

// CreateMonitors provides a mock function with given fields: monitors
func (_m *ElasticsearchAPIClientInterface) CreateMonitors(monitors map[string]model.Monitor) []model.UpdateMonitorResponse {
	ret := _m.Called(monitors)

	if len(ret) == 0 {
		panic("no return value specified for CreateMonitors")
	}

	var r0 []model.UpdateMonitorResponse
	if rf, ok := ret.Get(0).(func(map[string]model.Monitor) []model.UpdateMonitorResponse); ok {
		r0 = rf(monitors)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.UpdateMonitorResponse)
		}
	}

	return r0
}

// ElasticsearchAPIClientInterface_CreateMonitors_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateMonitors'
type ElasticsearchAPIClientInterface_CreateMonitors_Call struct {
	*mock.Call
}

// CreateMonitors is a helper method to define mock.On call
//   - monitors map[string]model.Monitor
func (_e *ElasticsearchAPIClientInterface_Expecter) CreateMonitors(monitors interface{}) *ElasticsearchAPIClientInterface_CreateMonitors_Call {
	return &ElasticsearchAPIClientInterface_CreateMonitors_Call{Call: _e.mock.On("CreateMonitors", monitors)}
}

func (_c *ElasticsearchAPIClientInterface_CreateMonitors_Call) Run(run func(monitors map[string]model.Monitor)) *ElasticsearchAPIClientInterface_CreateMonitors_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]model.Monitor))
	})
	return _c
}

func (_c *ElasticsearchAPIClientInterface_CreateMonitors_Call) Return(_a0 []model.UpdateMonitorResponse) *ElasticsearchAPIClientInterface_CreateMonitors_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ElasticsearchAPIClientInterface_CreateMonitors_Call) RunAndReturn(run func(map[string]model.Monitor) []model.UpdateMonitorResponse) *ElasticsearchAPIClientInterface_CreateMonitors_Call {
	_c.Call.Return(run)
	return _c
}

// FetchDestinations provides a mock function with given fields:
func (_m *ElasticsearchAPIClientInterface) FetchDestinations() (map[string]model.Destination, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for FetchDestinations")
	}

	var r0 map[string]model.Destination
	var r1 error
	if rf, ok := ret.Get(0).(func() (map[string]model.Destination, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() map[string]model.Destination); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]model.Destination)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ElasticsearchAPIClientInterface_FetchDestinations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchDestinations'
type ElasticsearchAPIClientInterface_FetchDestinations_Call struct {
	*mock.Call
}

// FetchDestinations is a helper method to define mock.On call
func (_e *ElasticsearchAPIClientInterface_Expecter) FetchDestinations() *ElasticsearchAPIClientInterface_FetchDestinations_Call {
	return &ElasticsearchAPIClientInterface_FetchDestinations_Call{Call: _e.mock.On("FetchDestinations")}
}

func (_c *ElasticsearchAPIClientInterface_FetchDestinations_Call) Run(run func()) *ElasticsearchAPIClientInterface_FetchDestinations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ElasticsearchAPIClientInterface_FetchDestinations_Call) Return(_a0 map[string]model.Destination, _a1 error) *ElasticsearchAPIClientInterface_FetchDestinations_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ElasticsearchAPIClientInterface_FetchDestinations_Call) RunAndReturn(run func() (map[string]model.Destination, error)) *ElasticsearchAPIClientInterface_FetchDestinations_Call {
	_c.Call.Return(run)
	return _c
}

// FetchMonitors provides a mock function with given fields:
func (_m *ElasticsearchAPIClientInterface) FetchMonitors() (map[string]model.Monitor, mapset.Set, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for FetchMonitors")
	}

	var r0 map[string]model.Monitor
	var r1 mapset.Set
	var r2 error
	if rf, ok := ret.Get(0).(func() (map[string]model.Monitor, mapset.Set, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() map[string]model.Monitor); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]model.Monitor)
		}
	}

	if rf, ok := ret.Get(1).(func() mapset.Set); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(mapset.Set)
		}
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ElasticsearchAPIClientInterface_FetchMonitors_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchMonitors'
type ElasticsearchAPIClientInterface_FetchMonitors_Call struct {
	*mock.Call
}

// FetchMonitors is a helper method to define mock.On call
func (_e *ElasticsearchAPIClientInterface_Expecter) FetchMonitors() *ElasticsearchAPIClientInterface_FetchMonitors_Call {
	return &ElasticsearchAPIClientInterface_FetchMonitors_Call{Call: _e.mock.On("FetchMonitors")}
}

func (_c *ElasticsearchAPIClientInterface_FetchMonitors_Call) Run(run func()) *ElasticsearchAPIClientInterface_FetchMonitors_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ElasticsearchAPIClientInterface_FetchMonitors_Call) Return(_a0 map[string]model.Monitor, _a1 mapset.Set, _a2 error) *ElasticsearchAPIClientInterface_FetchMonitors_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *ElasticsearchAPIClientInterface_FetchMonitors_Call) RunAndReturn(run func() (map[string]model.Monitor, mapset.Set, error)) *ElasticsearchAPIClientInterface_FetchMonitors_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateMonitors provides a mock function with given fields: preparedMonitors
func (_m *ElasticsearchAPIClientInterface) UpdateMonitors(preparedMonitors map[string]model.Monitor) []model.UpdateMonitorResponse {
	ret := _m.Called(preparedMonitors)

	if len(ret) == 0 {
		panic("no return value specified for UpdateMonitors")
	}

	var r0 []model.UpdateMonitorResponse
	if rf, ok := ret.Get(0).(func(map[string]model.Monitor) []model.UpdateMonitorResponse); ok {
		r0 = rf(preparedMonitors)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.UpdateMonitorResponse)
		}
	}

	return r0
}

// ElasticsearchAPIClientInterface_UpdateMonitors_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateMonitors'
type ElasticsearchAPIClientInterface_UpdateMonitors_Call struct {
	*mock.Call
}

// UpdateMonitors is a helper method to define mock.On call
//   - preparedMonitors map[string]model.Monitor
func (_e *ElasticsearchAPIClientInterface_Expecter) UpdateMonitors(preparedMonitors interface{}) *ElasticsearchAPIClientInterface_UpdateMonitors_Call {
	return &ElasticsearchAPIClientInterface_UpdateMonitors_Call{Call: _e.mock.On("UpdateMonitors", preparedMonitors)}
}

func (_c *ElasticsearchAPIClientInterface_UpdateMonitors_Call) Run(run func(preparedMonitors map[string]model.Monitor)) *ElasticsearchAPIClientInterface_UpdateMonitors_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]model.Monitor))
	})
	return _c
}

func (_c *ElasticsearchAPIClientInterface_UpdateMonitors_Call) Return(_a0 []model.UpdateMonitorResponse) *ElasticsearchAPIClientInterface_UpdateMonitors_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ElasticsearchAPIClientInterface_UpdateMonitors_Call) RunAndReturn(run func(map[string]model.Monitor) []model.UpdateMonitorResponse) *ElasticsearchAPIClientInterface_UpdateMonitors_Call {
	_c.Call.Return(run)
	return _c
}

// NewElasticsearchAPIClientInterface creates a new instance of ElasticsearchAPIClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewElasticsearchAPIClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ElasticsearchAPIClientInterface {
	mock := &ElasticsearchAPIClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
